version: '3.8'
services:
  traefik:
    image: traefik
    ports:
      # Exposes port 80 for incomming web requests
      - "80:80"
      # The Web UI port http://0.0.0.0:8080 (enabled by --api.insecure=true)
      - "8080:8080"
      - "3306:3306"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./app/traefik/conf/traefik.yml:/etc/traefik/traefik.yml
    deploy:
      update_config:
        delay: 10s
        order: start-first
      placement:
        constraints:
          - node.role == manager
  
  zookeeper:
    image: debezium/zookeeper:${DEBEZIUM_VERSION}
    hostname: zookeeper
    deploy:
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager
  
  kafka:
    image: debezium/kafka:${DEBEZIUM_VERSION}
    hostname: kafka
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
    deploy:
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager
  
  mysql:
    image: mysql:8.0
    hostname: mysql
    environment:
     - MYSQL_ROOT_PASSWORD=debezium
     - MYSQL_USER=mysqluser
     - MYSQL_PASSWORD=mysqlpw
    deploy:
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.tcp.services.mysql.loadbalancer.server.port=3306"
        - "traefik.tcp.routers.mysql.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.mysql.entrypoints=mysql"
    volumes:
      - "./app/mysql/dump:/docker-entrypoint-initdb.d"
      - "./app/mysql/conf:/etc/mysql/conf.d"
  
  connect:
    image: debezium/connect:${DEBEZIUM_VERSION}
    hostname: connect
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
     - ENABLE_DEBEZIUM_SCRIPTING=true
     - CONNECT_REST_EXTENSION_CLASSES=io.debezium.kcrestextension.DebeziumConnectRestExtension
    deploy:
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager

  debezium-ui:
    image: debezium/debezium-ui:${DEBEZIUM_VERSION}
    environment:
     - KAFKA_CONNECT_URIS=http://connect:8083
     - DEPLOYMENT_MODE=default
    deploy:
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.debezium.rule=Host(`$DEBEZIUM_UI_DNS`)"
        - "traefik.http.routers.debezium.entrypoints=web"
        - "traefik.http.routers.debezium.service=debezium"
        - "traefik.http.services.debezium.loadbalancer.server.port=8080"